/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rekenmachine;

/**
 *
 * @author adeliae
 */
public class Telraam extends javax.swing.JFrame {
    //"" achter strings gezet om te voorkomen dat null als input wordt gegeven
    String eersteGetal = "";
    String tweedeGetal = "";
    String invoer = "";
    String operatie = "";
    String antwoord = "";
    double uitkomst;
    
    /**
     * Creates new form Telraam
     */
    public Telraam() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        invoer7 = new javax.swing.JButton();
        invoer8 = new javax.swing.JButton();
        invoer9 = new javax.swing.JButton();
        invoer4 = new javax.swing.JButton();
        invoer5 = new javax.swing.JButton();
        invoer6 = new javax.swing.JButton();
        invoer1 = new javax.swing.JButton();
        invoer2 = new javax.swing.JButton();
        invoer3 = new javax.swing.JButton();
        invoer0 = new javax.swing.JButton();
        invoerkomma = new javax.swing.JButton();
        clearbutton = new javax.swing.JButton();
        invoerplus = new javax.swing.JButton();
        invoermin = new javax.swing.JButton();
        invoerdelen = new javax.swing.JButton();
        invoerkeer = new javax.swing.JButton();
        invoermacht = new javax.swing.JButton();
        uitrekenen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rekenmachine");
        setName("telraamForm"); // NOI18N

        invoer7.setText("7");
        invoer7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer7ActionPerformed(evt);
            }
        });

        invoer8.setText("8");
        invoer8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer8ActionPerformed(evt);
            }
        });

        invoer9.setText("9");
        invoer9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer9ActionPerformed(evt);
            }
        });

        invoer4.setText("4");
        invoer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer4ActionPerformed(evt);
            }
        });

        invoer5.setText("5");
        invoer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer5ActionPerformed(evt);
            }
        });

        invoer6.setText("6");
        invoer6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer6ActionPerformed(evt);
            }
        });

        invoer1.setText("1");
        invoer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer1ActionPerformed(evt);
            }
        });

        invoer2.setText("2");
        invoer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer2ActionPerformed(evt);
            }
        });

        invoer3.setText("3");
        invoer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer3ActionPerformed(evt);
            }
        });

        invoer0.setText("0");
        invoer0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoer0ActionPerformed(evt);
            }
        });

        invoerkomma.setText(".");
        invoerkomma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoerkommaActionPerformed(evt);
            }
        });

        clearbutton.setText("C");
        clearbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbuttonActionPerformed(evt);
            }
        });

        invoerplus.setText("+");
        invoerplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoerplusActionPerformed(evt);
            }
        });

        invoermin.setText("-");
        invoermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoerminActionPerformed(evt);
            }
        });

        invoerdelen.setText("/");
        invoerdelen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoerdelenActionPerformed(evt);
            }
        });

        invoerkeer.setText("*");
        invoerkeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoerkeerActionPerformed(evt);
            }
        });

        invoermacht.setText("^");
        invoermacht.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoermachtActionPerformed(evt);
            }
        });

        uitrekenen.setText("=");
        uitrekenen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uitrekenenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(invoer1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(invoer4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoer7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(clearbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(invoer8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoer5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoer2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoer0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(invoer9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoer6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoer3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invoerkomma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(uitrekenen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(invoermacht, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(invoerplus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoermin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoerdelen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoerkeer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoer7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoer8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoer9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoerplus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoer4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoer5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoer6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoermin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoer1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoer2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoer3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoerdelen, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoer0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoerkomma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoerkeer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(invoermacht, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(uitrekenen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //tijd om de knopjes een functie te geven ヾ(*・ω・)ノ゜+.゜★ィェィ☆゜+.゜ヾ(・ω・*)ノ
    private void invoer7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer7ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer7.getText();
        jTextField1.setText(invoerGetal);
        //if statement gemaakt om te controleren of er al iets is ingevoerd
        //zodat je niet telkens op de c knop hoeft te klikken om een nieuwe
        //berekening te maken. (alleen gaat er na drie berekeningen iets mis oopsΣ(っﾟДﾟ；)っ )
        if(eersteGetal != "" && tweedeGetal != ""){  
            eersteGetal = antwoord;
            invoer += 7;
        } else{
            invoer += 7;
        }   
    }//GEN-LAST:event_invoer7ActionPerformed

    private void invoer8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer8ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer8.getText();
        jTextField1.setText(invoerGetal);
        if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 8;
        } else{
            invoer += 8;
        }
    }//GEN-LAST:event_invoer8ActionPerformed

    private void invoer9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer9ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer9.getText();
        jTextField1.setText(invoerGetal);
        if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 9;
        } else{
            invoer += 9;
        }
    }//GEN-LAST:event_invoer9ActionPerformed

    private void invoer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer4ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer4.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 4;
        } else{
            invoer += 4;
        }
    }//GEN-LAST:event_invoer4ActionPerformed

    private void invoer5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer5ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer5.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 5;
        } else{
            invoer += 5;
        }
    }//GEN-LAST:event_invoer5ActionPerformed

    private void invoer6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer6ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer6.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 6;
        } else{
            invoer += 6;
        }
    }//GEN-LAST:event_invoer6ActionPerformed

    private void invoer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer1ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer1.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 1;
        } else{
            invoer += 1;
        }
    }//GEN-LAST:event_invoer1ActionPerformed

    private void invoer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer2ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer2.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 2;
        } else{
            invoer += 2;
        }
    }//GEN-LAST:event_invoer2ActionPerformed

    private void invoer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer3ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer3.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 3;
        } else{
            invoer += 3;
        }
    }//GEN-LAST:event_invoer3ActionPerformed

    private void invoer0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoer0ActionPerformed
        String invoerGetal = jTextField1.getText() + invoer0.getText();
        jTextField1.setText(invoerGetal);
         if(eersteGetal != "" && tweedeGetal != ""){
            eersteGetal = antwoord;
            invoer += 0;
        } else{
            invoer += 0;
        }
    }//GEN-LAST:event_invoer0ActionPerformed

    private void invoerkommaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoerkommaActionPerformed
        String invoerGetal = jTextField1.getText() + invoerkomma.getText();
        jTextField1.setText(invoerGetal);
        invoer += ".";
    }//GEN-LAST:event_invoerkommaActionPerformed

    private void clearbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbuttonActionPerformed
        jTextField1.setText("");
        eersteGetal = "";
        tweedeGetal = "";
        invoer = "";
    }//GEN-LAST:event_clearbuttonActionPerformed

    private void invoerplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoerplusActionPerformed
        eersteGetal = jTextField1.getText();
        jTextField1.setText("+");
        eersteGetal = invoer;
        invoer = "";
        operatie = "+";
    }//GEN-LAST:event_invoerplusActionPerformed

    private void invoerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoerminActionPerformed
        eersteGetal = jTextField1.getText();
        jTextField1.setText("-");
        eersteGetal = invoer;
        invoer = "";
        operatie = "-";
    }//GEN-LAST:event_invoerminActionPerformed

    private void invoerdelenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoerdelenActionPerformed
        eersteGetal = jTextField1.getText();
        jTextField1.setText("/");
        eersteGetal = invoer;
        invoer = "";
        operatie = "/";
    }//GEN-LAST:event_invoerdelenActionPerformed

    private void invoerkeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoerkeerActionPerformed
        eersteGetal = jTextField1.getText();
        jTextField1.setText("*");
        eersteGetal = invoer;
        invoer = "";
        operatie = "*";
        //hhahaa ben opnieuw begonnen omdat ik de in de vorige versie 
        //de vermenigvuldig functie was vergeten te maken
        //good job me (屮゜Д゜)屮
    }//GEN-LAST:event_invoerkeerActionPerformed

    private void invoermachtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoermachtActionPerformed
        eersteGetal = jTextField1.getText();
        jTextField1.setText("^");
        eersteGetal = invoer;
        //int uitreken = Integer.parseInt(invoer) * Integer.parseInt(invoer);
        //eersteGetal = uitreken + "";
        invoer = "";
        operatie = "^";
        //System.out.println(eersteGetal);
        //eersteGetal = uitkomst + "";
        //jTextField1.setText(eersteGetal);
    }//GEN-LAST:event_invoermachtActionPerformed

    private void uitrekenenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uitrekenenActionPerformed
        //TO INFINITY AND BEYOOOOOOOOOOOOOOOOOOOOND ﾟ+.(ﾉ｡'▽')ﾉ*.ｵｵｫｫ☆ﾟ･:*☆
        //hier wordt alles berekend
        
        tweedeGetal = invoer;
        //System.out.println(eersteGetal);
        //System.out.println(tweedeGetal);
        
        if(eersteGetal!= "" && tweedeGetal != ""){
            
            if(operatie == "+" ){
                uitkomst = Double.parseDouble(eersteGetal) + Double.parseDouble(tweedeGetal); 
                antwoord = uitkomst + "";
                jTextField1.setText(antwoord);
            } else if(operatie == "-"){
                uitkomst = Double.parseDouble(eersteGetal) - Double.parseDouble(tweedeGetal);
                antwoord = uitkomst + "";
                jTextField1.setText(antwoord);
            } else if(operatie == "/"){
                uitkomst = Double.parseDouble(eersteGetal) / Double.parseDouble(tweedeGetal);
                antwoord = uitkomst + "";
                jTextField1.setText(antwoord);
            } else if(operatie == "*"){
                uitkomst = Double.parseDouble(eersteGetal) * Double.parseDouble(tweedeGetal);
                antwoord = uitkomst + "";
                jTextField1.setText(antwoord);
            } else if(operatie == "^"){
                uitkomst = Double.parseDouble(eersteGetal) * Double.parseDouble(eersteGetal); //heb dit gebruikt ipv math.pow
                antwoord = uitkomst + "";
                jTextField1.setText(antwoord);
            }
        }
    }//GEN-LAST:event_uitrekenenActionPerformed

    /* het is mij niet echt gelukt om een manier te vinden om het resultaat
     * van het machtsverheffen te laten weergeven, aangezien mijn rekenmachine
     * eerst twee inputs wilt hebben.
     * heb geprobeerd om het op een andere manier te doen (zie de comments in
     * invoermacht) maar dat lukte ook niet echt. het kan het in iedergeval wel
     * uitrekenen.
    */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Telraam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Telraam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Telraam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Telraam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Telraam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearbutton;
    private javax.swing.JButton invoer0;
    private javax.swing.JButton invoer1;
    private javax.swing.JButton invoer2;
    private javax.swing.JButton invoer3;
    private javax.swing.JButton invoer4;
    private javax.swing.JButton invoer5;
    private javax.swing.JButton invoer6;
    private javax.swing.JButton invoer7;
    private javax.swing.JButton invoer8;
    private javax.swing.JButton invoer9;
    private javax.swing.JButton invoerdelen;
    private javax.swing.JButton invoerkeer;
    private javax.swing.JButton invoerkomma;
    private javax.swing.JButton invoermacht;
    private javax.swing.JButton invoermin;
    private javax.swing.JButton invoerplus;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton uitrekenen;
    // End of variables declaration//GEN-END:variables
}
